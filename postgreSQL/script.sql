-- MySQL Script generated by MySQL Workbench
-- 01/30/15 22:17:34
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

/* SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0; */
/* SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0; */
/* SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES'; */

-- -----------------------------------------------------
-- Schema livetracker
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema livetracker
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS livetracker;
--USE livetracker ;

-- -----------------------------------------------------
-- Table `livetracker`.`Users`
-- -----------------------------------------------------
CREATE SEQUENCE livetracker.Users_seq;

CREATE TABLE IF NOT EXISTS livetracker.Users (
  idUser INT NOT NULL DEFAULT NEXTVAL ('livetracker.Users_seq') primary key,
  idFacebook VARCHAR(128) null CONSTRAINT idFacebook_UNIQUE UNIQUE ,
  email VARCHAR(128) null CONSTRAINT email_UNIQUE UNIQUE,
  userName VARCHAR(128) NOT null CONSTRAINT userName_UNIQUE UNIQUE,
  profilePicPath VARCHAR(512) NULL,
  friendsCount INT NULL,
  birthday DATE NULL,
  dateCreated TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP)
;


-- -----------------------------------------------------
-- Table `livetracker`.`Routes`
-- -----------------------------------------------------
CREATE SEQUENCE livetracker.Routes_seq;

CREATE TABLE IF NOT EXISTS livetracker.Routes (
  idRoute INT NOT NULL DEFAULT NEXTVAL ('livetracker.Routes_seq') UNIQUE,
  routeName VARCHAR(256) NULL,
  distance DOUBLE PRECISION NULL,
  averageSpeed DOUBLE PRECISION NULL,
  startTime TIMESTAMP(0) NULL,
  endTime TIMESTAMP(0) NULL,
  dateCreated TIMESTAMP(0) NULL DEFAULT CURRENT_TIMESTAMP,
  idUser INT NOT NULL,
  PRIMARY KEY (idRoute, idUser)
 ,
  CONSTRAINT fk_Routes_Users
    FOREIGN KEY (idUser)
    REFERENCES livetracker.Users (idUser)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_Routes_Users_idx ON livetracker.Routes (idUser ASC);


-- -----------------------------------------------------
-- Table `livetracker`.`Points`
-- -----------------------------------------------------
CREATE SEQUENCE livetracker.Points_seq;

CREATE TABLE IF NOT EXISTS livetracker.Points (
  idPoint INT NOT NULL DEFAULT NEXTVAL ('livetracker.Points_seq'),
  lat DOUBLE PRECISION NOT NULL,
  lng DOUBLE PRECISION NOT NULL,
  altitude DOUBLE PRECISION NULL,
  accuracy DOUBLE PRECISION NULL,
  speed DOUBLE PRECISION NULL,
  bearing DOUBLE PRECISION NULL,
  dateCreated TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  idRoute INT NOT NULL,
  PRIMARY KEY (idPoint, idRoute)
 ,
  CONSTRAINT fk_Points_Routes1
    FOREIGN KEY (idRoute)
    REFERENCES livetracker.Routes (idRoute)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_Points_Routes1_idx ON livetracker.Points (idRoute ASC);


-- -----------------------------------------------------
-- Table `livetracker`.`Plans`
-- -----------------------------------------------------
CREATE SEQUENCE livetracker.Plans_seq;

CREATE TABLE IF NOT EXISTS livetracker.Plans (
  idPlan INT NOT NULL DEFAULT NEXTVAL ('livetracker.Plans_seq') UNIQUE,
  planText VARCHAR(512) NOT NULL,
  dateCreated TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  idUser INT NOT NULL,
  PRIMARY KEY (idPlan, idUser)
 ,
  CONSTRAINT fk_Plans_Users1
    FOREIGN KEY (idUser)
    REFERENCES livetracker.Users (idUser)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_Plans_Users1_idx ON livetracker.Plans (idUser ASC);


-- -----------------------------------------------------
-- Table `livetracker`.`PlanLikes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS livetracker.PlanLikes (
  idPlan INT NOT NULL,
  idUser INT NOT NULL,
  PRIMARY KEY (idUser, idPlan)
 ,
  CONSTRAINT fk_PlanLikes_Plans1
    FOREIGN KEY (idPlan)
    REFERENCES livetracker.Plans (idPlan)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_PlanLikes_Users1
    FOREIGN KEY (idUser)
    REFERENCES livetracker.Users (idUser)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_PlanLikes_Plans1_idx ON livetracker.PlanLikes (idPlan ASC);
CREATE INDEX fk_PlanLikes_Users1_idx ON livetracker.PlanLikes (idUser ASC);


-- -----------------------------------------------------
-- Table `livetracker`.`PlanComments`
-- -----------------------------------------------------
CREATE SEQUENCE livetracker.PlanComments_seq;

CREATE TABLE IF NOT EXISTS livetracker.PlanComments (
  idPlanComment INT NOT NULL DEFAULT NEXTVAL ('livetracker.PlanComments_seq'),
  planComment VARCHAR(512) NOT NULL,
  dateCreated TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  idPlan INT NOT NULL,
  idUser INT NOT NULL,
  PRIMARY KEY (idPlanComment, idPlan, idUser)
 ,
  CONSTRAINT fk_PlanComment_Plans1
    FOREIGN KEY (idPlan)
    REFERENCES livetracker.Plans (idPlan)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_PlanComments_Users1
    FOREIGN KEY (idUser)
    REFERENCES livetracker.Users (idUser)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_PlanComment_Plans1_idx ON livetracker.PlanComments (idPlan ASC);
CREATE INDEX fk_PlanComments_Users1_idx ON livetracker.PlanComments (idUser ASC);


-- -----------------------------------------------------
-- Table `livetracker`.`RouteLikes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS livetracker.RouteLikes (
  idRoute INT NOT NULL,
  idUser INT NOT NULL,
  PRIMARY KEY (idUser, idRoute)
 ,
  CONSTRAINT fk_RouteLikes_Routes1
    FOREIGN KEY (idRoute)
    REFERENCES livetracker.Routes (idRoute)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_RouteLikes_Users1
    FOREIGN KEY (idUser)
    REFERENCES livetracker.Users (idUser)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_RouteLikes_Routes1_idx ON livetracker.RouteLikes (idRoute ASC);
CREATE INDEX fk_RouteLikes_Users1_idx ON livetracker.RouteLikes (idUser ASC);


-- -----------------------------------------------------
-- Table `livetracker`.`RouteComments`
-- -----------------------------------------------------
CREATE SEQUENCE livetracker.RouteComments_seq;

CREATE TABLE IF NOT EXISTS livetracker.RouteComments (
  idRouteComment INT NOT NULL DEFAULT NEXTVAL ('livetracker.RouteComments_seq') UNIQUE,
  routeComment VARCHAR(512) NOT NULL,
  dateCreated TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  idRoute INT NOT NULL,
  idUser INT NOT NULL,
  PRIMARY KEY (idRouteComment, idRoute, idUser)
 ,
  CONSTRAINT fk_RouteComments_Routes1
    FOREIGN KEY (idRoute)
    REFERENCES livetracker.Routes (idRoute)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_RouteComments_Users1
    FOREIGN KEY (idUser)
    REFERENCES livetracker.Users (idUser)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_RouteComments_Routes1_idx ON livetracker.RouteComments (idRoute ASC);
CREATE INDEX fk_RouteComments_Users1_idx ON livetracker.RouteComments (idUser ASC);


-- -----------------------------------------------------
-- Table `livetracker`.`Friends`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS livetracker.Friends (
  friendOne INT NOT NULL,
  friendTwo INT NOT NULL,
  dateCreated TIMESTAMP(0) NOT NULL DEFAULT CURRENT_TIMESTAMP,
  status VARCHAR(1) NOT NULL DEFAULT '0',
  PRIMARY KEY (friendOne, friendTwo),
  CONSTRAINT fk_Friends_Users1
    FOREIGN KEY (friendOne)
    REFERENCES livetracker.Users (idUser)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT fk_Friends_Users2
    FOREIGN KEY (friendTwo)
    REFERENCES livetracker.Users (idUser)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION);


-- -----------------------------------------------------
-- Table `livetracker`.`PlanCommentLikes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS livetracker.PlanCommentLikes (
  idPlanComment INT NOT null UNIQUE,
  idPlan INT NOT NULL,
  idUser INT NOT NULL,
  PRIMARY KEY (idUser, idPlan, idPlanComment)
 ,
  CONSTRAINT fk_PlanCommentLikes_PlanComments1
    FOREIGN KEY (idPlanComment , idPlan , idUser)
    REFERENCES livetracker.PlanComments (idPlanComment , idPlan , idUser)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;

CREATE INDEX fk_PlanCommentLikes_PlanComments1_idx ON livetracker.PlanCommentLikes (idPlanComment ASC, idPlan ASC, idUser ASC);


-- -----------------------------------------------------
-- Table `livetracker`.`RouteCommentLikes`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS livetracker.RouteCommentLikes (
  idRouteComment INT NOT null UNIQUE,
  idRoute INT NOT NULL,
  idUser INT NOT NULL,
  PRIMARY KEY (idRouteComment, idRoute, idUser),
  CONSTRAINT fk_RouteCommentLikes_RouteComments1
    FOREIGN KEY (idRouteComment , idRoute , idUser)
    REFERENCES livetracker.RouteComments (idRouteComment , idRoute , idUser)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
;


/* SET SQL_MODE=@OLD_SQL_MODE; */
/* SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS; */
/* SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS; */


--ALTER TABLE  Users add COLUMN  online TINYINT NOT NULL DEFAULT  '0';